trigger:
  branches:
    include: ['*']
  tags:
    include: ['*']

jobs:
- job:
  displayName: manylinux
  pool:
    vmImage: 'ubuntu-16.04'

  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.6'
        architecture: 'x64'
  
    - script: |
        python -m pip install --upgrade pip setuptools wheel
      displayName: 'Install setuptools+wheel'

    - script: docker run -v $(Build.SourcesDirectory):/io konstin2/pyo3-pack:master build
      displayName: 'Install maturin'

    - script: |
        pip install $(Build.SourcesDirectory)/target/wheels/evtx-*-cp36-*.whl
      displayName: 'Install new wheel'

    - script: |
        pip install pytest pytest-azurepipelines
        pytest
      displayName: 'pytest'
    
    - script: |
        docker run -v $(Build.SourcesDirectory):/io konstin2/pyo3-pack publish -u omerba -p $(pypi.password)
      displayName: "Upload to PyPi"
      condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))


- job:
  displayName: macOS-10.13

  pool:
    vmImage: 'macOS-10.13'

  steps:
    - script: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain nightly
        echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
      displayName: "Install rust"
    
    - bash: |
        MY_TAG="$(Build.SourceBranch)"
        MY_TAG=${MY_TAG#refs/tags/}
        echo $MY_TAG
        echo "##vso[task.setvariable variable=build.my_tag]$MY_TAG"
      displayName: "Create tag variable"
    
    - bash: |
        DATE="$(date +%Y-%m-%d)"
        echo "##vso[task.setvariable variable=build.date]$DATE"
      displayName: "Create date variable"

    - bash: |
        cargo install maturin
      displayName: "Install PyO3-pack"

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.6'
        architecture: 'x64'
  
    - script: |
        python -m pip install --upgrade pip setuptools wheel
      displayName: 'Install maturin'

    - script: |
        maturin build -o $(Build.BinariesDirectory)
      displayName: 'PyO3-pack build'

    - script: |
        pip install $(Build.BinariesDirectory)/evtx-*-cp36-*.whl
      displayName: 'Install new wheel'

    - script: |
        pip install pytest pytest-azurepipelines
        pytest
      displayName: 'pytest'
    
    - script: |
        maturin publish -u omerba -p $(pypi.password)
      displayName: "Upload to PyPi"
      condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))


- job: 
  displayName: Windows

  pool:
    vmImage: 'vs2017-win2016'

  steps:
    - script: |
          curl -sSf -o rustup-init.exe https://win.rustup.rs
          rustup-init.exe -y --default-toolchain nightly
          echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
      displayName: Install rust
    
    - bash: |
        MY_TAG="$(Build.SourceBranch)"
        MY_TAG=${MY_TAG#refs/tags/}
        echo $MY_TAG
        echo "##vso[task.setvariable variable=build.my_tag]$MY_TAG"
      displayName: "Create tag variable"
    
    - bash: |
        DATE="$(date +%Y-%m-%d)"
        echo "##vso[task.setvariable variable=build.date]$DATE"
      displayName: "Create date variable"

    - script: |
        cargo install maturin
      displayName: "Install PyO3-pack"

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.6'
        architecture: 'x64'

    - script: |
        python -m pip install --upgrade pip setuptools wheel
      displayName: 'Install maturin'

    - script: |
        maturin build -o $(Build.BinariesDirectory) --interpreter python
      displayName: 'PyO3-pack build'

    - powershell: |
        pip install $(Build.BinariesDirectory)/$(Get-ChildItem $(Build.BinariesDirectory)/evtx-*-cp36-*.whl | Select -exp Name)
      displayName: 'Install new wheel'

    - script: |
        pip install pytest pytest-azurepipelines
        pytest
      displayName: 'pytest'
    
    - script: |
        maturin publish -u omerba -p $(pypi.password) --interpreter python
      displayName: "Upload to PyPi"
      condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'
        architecture: 'x64'

    - script: |
        maturin publish -u omerba -p $(pypi.password) --interpreter python
      displayName: "Upload to PyPi"
      condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
